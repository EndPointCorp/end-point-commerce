@page "/checkout/confirmation/{OrderGuid}"

@using System.Net
@using EndPointCommerce.WebStoreSpa.Api
@using EndPointCommerce.WebStoreSpa.Formatters

@inject NavigationManager Navigation
@inject IApiClient ApiClient

<PageTitle>Order Confirmation - End Point Commerce</PageTitle>

@if (Order != null)
{
    <section class="py-1">
        <div class="container px-4 px-lg-5 my-5">
            <h1>Thank you for your order!</h1>

            <h1 class="mb-4">Order details</h1>

            <div class="card mb-2 p-3">
                <div class="row">
                    <div class="col-md">
                        Order placed on: @Order.DateCreated.AsLongDate()
                    </div>
                    <div class="col-md">
                        Order #: @Order.Id
                    </div>
                </div>
                <div class="row">
                    <div class="col-md">
                        Status: @Order.Status
                    </div>
                    <div class="col-md">
                        Tracking #: @(Order.TrackingNumber ?? "N/A")
                    </div>
                </div>
            </div>

            <div class="row m-0">
                <div class="card col-md me-md-2 mb-2 p-3">
                    <h3>Shipping Address</h3>
                    <p class="my-0">@Order.ShippingAddress.FullName</p>
                    <p class="my-0">@Order.ShippingAddress.Street</p>
                    @if (!string.IsNullOrEmpty(Order.ShippingAddress.StreetTwo))
                    {
                        <p class="my-0">@Order.ShippingAddress.StreetTwo</p>
                    }
                    <p class="my-0">@Order.ShippingAddress.City, @Order.ShippingAddress.State?.Abbreviation @Order.ShippingAddress.ZipCode</p>
                    @if (!string.IsNullOrEmpty(Order.ShippingAddress.PhoneNumber))
                    {
                        <p class="my-0">@Order.ShippingAddress.PhoneNumber</p>
                    }
                </div>
                <div class="card col-md me-md-2 mb-2 p-3">
                    <h3>Billing Address</h3>
                    <p class="my-0">@Order.BillingAddress.FullName</p>
                    <p class="my-0">@Order.BillingAddress.Street</p>
                    @if (!string.IsNullOrEmpty(Order.BillingAddress.StreetTwo))
                    {
                        <p class="my-0">@Order.BillingAddress.StreetTwo</p>
                    }
                    <p class="my-0">@Order.BillingAddress.City, @Order.BillingAddress.State?.Abbreviation @Order.BillingAddress.ZipCode</p>
                    @if (!string.IsNullOrEmpty(Order.BillingAddress.PhoneNumber))
                    {
                        <p class="my-0">@Order.BillingAddress.PhoneNumber</p>
                    }
                </div>
                <div class="card col-md mb-2 p-3">
                    <h3>Summary</h3>

                    <p class="my-0">Subtotal: @Order.Subtotal.AsCurrency()</p>
                    @if (Order.Discount > 0)
                    {
                        <p class="my-0">Discount: @Order.Discount.AsCurrency()</p>
                    }
                    <p class="my-0">Tax: @Order.Tax.AsCurrency()</p>
                    <p class="my-0">Grand Total: @Order.Total.AsCurrency()</p>
                </div>
            </div>

            @foreach (var item in Order.Items)
            {
                <div class="card mb-2 p-3">
                    <div class="row g-0">
                        <div class="col-md-4 text-center">
                            @if (!string.IsNullOrEmpty(item.Product.ThumbnailImageUrl))
                            {
                                <img
                                    class="img-fluid rounded"
                                    src="@item.Product.ThumbnailImageUrl"
                                    alt="@item.Product.Name"
                                />
                            }
                            else
                            {
                                <img
                                    class="img-fluid rounded"
                                    src="https://dummyimage.com/300x300/dee2e6/6c757d.jpg"
                                    alt="@item.Product.Name"
                                />
                            }
                        </div>
                        <div class="col-md-8">
                            <div class="card-body">
                                <p class="card-text fs-4">@item.Quantity x @item.Product.Name</p>
                                <p class="card-text">SKU: @item.Product.Sku</p>
                                <p class="card-text">@item.Total.AsCurrency()</p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </section>
}

@code {
    [Parameter]
    public string OrderGuid { get; set; } = string.Empty;

    public Order Order { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Order = await ApiClient.GetOrder(OrderGuid);
        }
        catch (HttpRequestException ex) when (ex.StatusCode == HttpStatusCode.NotFound)
        {
            Navigation.NavigateTo("/notfound");
        }
    }
}

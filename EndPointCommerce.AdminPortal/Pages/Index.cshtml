@page
@model IndexModel
@{
    ViewData["Title"] = "Dashboard";
}

@section styles {
    <link rel="stylesheet" href="~/node_modules/simple-datatables/dist/style.css" />
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Dashboard</h1>
    <div class="row">
        <div class="col-xl-3 col-md-6">
            <div class="card bg-primary text-white mb-4">
                <div class="card-body">Today's sales</div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" asp-page="/Orders/Index">$ @Html.DisplayFor(model => model.Dashboard.TodaysSales)</a>
                    <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-warning text-white mb-4">
                <div class="card-body">Total sales this month</div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" asp-page="/Orders/Index">$ @Html.DisplayFor(model => model.Dashboard.MonthSales)</a>
                    <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-danger text-white mb-4">
                <div class="card-body">New customers this month</div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" asp-page="/Customers/Index">@Html.DisplayFor(model => model.Dashboard.MonthCustomers)</a>
                    <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-success text-white mb-4">
                <div class="card-body">Active products</div>
                <div class="card-footer d-flex align-items-center justify-content-between">
                    <a class="small text-white stretched-link" asp-page="/Products/Index">@Html.DisplayFor(model => model.Dashboard.ActiveProducts)</a>
                    <div class="small text-white"><i class="fas fa-angle-right"></i></div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-area me-1"></i>
                    Orders
                </div>
                <div class="card-body"><canvas id="ordersChart" width="100%" height="40"></canvas></div>
            </div>
        </div>
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-bar me-1"></i>
                    Amounts
                </div>
                <div class="card-body"><canvas id="amountsChart" width="100%" height="40"></canvas></div>
            </div>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-table me-1"></i>
            Last 10 orders
        </div>
        <div class="card-body">
            <table id="table-orders">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Orders[0].Id)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Orders[0].DateCreated)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Orders[0].Customer.FullName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Orders[0].Status.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Orders[0].BillingAddress.FullAddress)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Orders[0].Total)
                        </th>
                        <th>
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Orders)
                    {
                        <tr>
                            <th>
                                @Html.DisplayFor(modelItem => item.Id)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.DateCreated)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.Customer.FullName)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.Status.Name)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.BillingAddress.FullAddress)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.Total)
                            </th>
                            <td>
                                <a asp-page="/Orders/Edit" asp-route-id="@item.Id" class="btn btn-link p-0" role="button">
                                    <i class="fa-solid fa-pen-to-square"></i> Edit
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section scripts {

    <script src="~/node_modules/chart.js/dist/Chart.min.js"></script>
    <script src="~/node_modules/simple-datatables/dist/umd/simple-datatables.js"></script>
    <script src="~/js/dashboard.js" asp-append-version="true"></script>

    <script type="text/javascript">

        // Set new default font family and font color to mimic Bootstrap's default styling
        Chart.defaults.global.defaultFontFamily = '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#292b2c';

        // Orders chart and data
        var ordersChartLabels = JSON.parse('@Html.Raw(Json.Serialize(Model.Dashboard.OrdersChart.Select(x => x.Label)))');
        var ordersChartValues = JSON.parse('@Html.Raw(Json.Serialize(Model.Dashboard.OrdersChart.Select(x => x.Value)))');
        var ctx = document.getElementById("ordersChart");
        var myLineChart = new Chart(ctx, {
          type: 'line',
          data: {
            labels: ordersChartLabels,
            datasets: [{
              label: "Orders",
              lineTension: 0,
              backgroundColor: "rgba(2,117,216,0.2)",
              borderColor: "rgba(2,117,216,1)",
              pointRadius: 5,
              pointBackgroundColor: "rgba(2,117,216,1)",
              pointBorderColor: "rgba(255,255,255,0.8)",
              pointHoverRadius: 5,
              pointHoverBackgroundColor: "rgba(2,117,216,1)",
              pointHitRadius: 50,
              pointBorderWidth: 2,
              data: ordersChartValues,
            }],
          },
          options: {
            scales: {
              xAxes: [{
                time: {
                  unit: 'date'
                },
                gridLines: {
                  display: false
                },
                ticks: {
                  maxTicksLimit: 7
                }
              }],
              yAxes: [{
                ticks: {
                  min: 0,
                  maxTicksLimit: 5
                },
                gridLines: {
                  color: "rgba(0, 0, 0, .125)",
                }
              }],
            },
            legend: {
              display: false
            }
          }
        });


        // Orders chart and data
        var amountsChartLabels = JSON.parse('@Html.Raw(Json.Serialize(Model.Dashboard.AmountsChart.Select(x => x.Label)))');
        var amountsChartValues = JSON.parse('@Html.Raw(Json.Serialize(Model.Dashboard.AmountsChart.Select(x => x.Value)))');
        var ctx = document.getElementById("amountsChart");
        var myLineChart = new Chart(ctx, {
          type: 'line',
          data: {
            labels: amountsChartLabels,
            datasets: [{
              label: "Amount",
              lineTension: 0,
              backgroundColor: "rgba(2,117,216,0.2)",
              borderColor: "rgba(2,117,216,1)",
              pointRadius: 5,
              pointBackgroundColor: "rgba(2,117,216,1)",
              pointBorderColor: "rgba(255,255,255,0.8)",
              pointHoverRadius: 5,
              pointHoverBackgroundColor: "rgba(2,117,216,1)",
              pointHitRadius: 50,
              pointBorderWidth: 2,
              data: amountsChartValues,
            }],
          },
          options: {
            scales: {
              xAxes: [{
                time: {
                  unit: 'date'
                },
                gridLines: {
                  display: false
                },
                ticks: {
                  maxTicksLimit: 7
                }
              }],
              yAxes: [{
                ticks: {
                  min: 0,
                  maxTicksLimit: 5
                },
                gridLines: {
                  color: "rgba(0, 0, 0, .125)",
                }
              }],
            },
            legend: {
              display: false
            }
          }
        });



    </script>

}
